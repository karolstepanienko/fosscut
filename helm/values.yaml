replicaCount:
  api: 1
  gui: 1

image:
  api:
    repository: karolstepanienko/fosscut-api-jar
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  gui:
    repository: karolstepanienko/fosscut-gui-native
    pullPolicy: IfNotPresent
    tag: ""

imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

tektonTask:
  # Specifies whether a tekton task capable of running fosscut cli should be created
  create: true
  repository: karolstepanienko/fosscut-cli-native
  tag: ""
  workspaces:
    - name: keystore
      mountPath: "/keystore.p12"
    - name: truststore
      mountPath: "/truststore.p12"
    - name: redis-connection-secrets
      mountPath: "/redis-connection-secrets.yaml"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  api:
    name: https-api
    type: ClusterIP
    port: 6443
  gui:
    name: https-gui
    type: ClusterIP
    port: 6443

ingress:
  enabled: true
  className: "haproxy"
  annotations:
    # use https when connecting to backend services
    haproxy.org/server-ssl: "true"
    # cert used to verify backend services certificate
    haproxy.org/server-ca: "fosscut/fosscut-ca"
    # client cert used by the loadbalancer
    haproxy.org/server-crt: "fosscut/fosscut-mtls-client-cert"
    # enable sticky sessions
    # cookie-persistence: "session-persistence-cookie"
  hosts:
    - host: fosscut.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: gui
            port:
              name: https-gui
        - path: /api
          pathType: Prefix
          service:
            name: api
            port:
              name: https-api
  tls:
   - secretName: fosscut.com-tls-secret
     hosts:
       - fosscut.com

resources:
  api: {}
  gui: {}

probeCommand:
  api: curl --cacert ca.crt --cert /client.crt --key /client.key -f -s -o /dev/null -w "%{http_code}" https://localhost:6443/api/health | grep 200
  gui: curl --cacert ca.crt --cert /client.crt --key /client.key -f -s -o /dev/null -w "%{http_code}" https://localhost:6443/health | grep 200

livenessProbe:
  api:
    time:
      initialDelaySeconds: 30
      periodSeconds: 5
  gui:
    time:
      initialDelaySeconds: 5
      periodSeconds: 5
readinessProbe:
  api:
    time:
      initialDelaySeconds: 30
      periodSeconds: 5
  gui:
    time:
      initialDelaySeconds: 5
      periodSeconds: 5

autoscaling:
  api:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  gui:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  api:
    - name: application-yml
      secret:
        secretName: fosscut-application-yml
        optional: false
    - name: keystore
      secret:
        secretName: fosscut-keystore
        optional: false
    - name: truststore
      secret:
        secretName: fosscut-truststore
        optional: false
    - name: ca-cert
      secret:
        secretName: fosscut-ca
        optional: false
    - name: mtls-client-cert
      secret:
        secretName: fosscut-mtls-client-cert
        optional: false
  gui:
    - name: application-yml
      secret:
        secretName: fosscut-application-yml
        optional: false
    - name: keystore
      secret:
        secretName: fosscut-keystore
        optional: false
    - name: truststore
      secret:
        secretName: fosscut-truststore
        optional: false
    - name: ca-cert
      secret:
        secretName: fosscut-ca
        optional: false
    - name: mtls-client-cert
      secret:
        secretName: fosscut-mtls-client-cert
        optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  api:
    - name: application-yml
      mountPath: "/application.yml"
      subPath: application.yml
      readOnly: true
    - name: keystore
      mountPath: "/keystore.p12"
      subPath: keystore.p12
      readOnly: true
    - name: truststore
      mountPath: "/truststore.p12"
      subPath: truststore.p12
      readOnly: true
    - name: ca-cert
      mountPath: "/ca.crt"
      subPath: tls.crt
      readOnly: true
    - name: mtls-client-cert
      mountPath: "/client.crt"
      subPath: tls.crt
      readOnly: true
    - name: mtls-client-cert
      mountPath: "/client.key"
      subPath: tls.key
      readOnly: true
  gui:
    - name: application-yml
      mountPath: "/application.yml"
      subPath: application.yml
      readOnly: true
    - name: keystore
      mountPath: "/keystore.p12"
      subPath: keystore.p12
      readOnly: true
    - name: truststore
      mountPath: "/truststore.p12"
      subPath: truststore.p12
      readOnly: true
    - name: ca-cert
      mountPath: "/ca.crt"
      subPath: tls.crt
      readOnly: true
    - name: mtls-client-cert
      mountPath: "/client.crt"
      subPath: tls.crt
      readOnly: true
    - name: mtls-client-cert
      mountPath: "/client.key"
      subPath: tls.key
      readOnly: true

# Path to api application properties that will be mounted as a secret
CACertPath: secrets/ca.crt
mTLSClientCertPath: secrets/client.crt
mTLSClientKeyPath: secrets/client.key
applicationYmlPath: secrets/application.yml
keystorePath: secrets/keystore.p12
truststorePath: secrets/truststore.p12
redisConnectionSecretsPath: secrets/redis-connection-secrets.yaml

nodeSelector: {}

tolerations: []

affinity: {}
