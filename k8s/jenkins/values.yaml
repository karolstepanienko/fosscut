controller:
  installPlugins: false
  image:
    registry: "karolstepanienko"
    repository: "fosscut-jenkins-controller"
    tag: "2.492.2-jdk17"
    pullPolicy: "IfNotPresent"

  jenkinsUrlProtocol: https

  httpsKeyStore:
    enable: true
    jenkinsHttpsJksSecretName: "jenkins-keystore-secret"

  admin:
    createSecret: false
    existingSecret: "jenkins-admin-user-secret"
    # -- The key in the existing admin secret containing the username
    userKey: username
    # -- The key in the existing admin secret containing the password
    passwordKey: password

  ingress:
    enabled: true
    apiVersion: networking.k8s.io/v1
    ingressClassName: haproxy
    annotations:
        # use https when connecting to backend services
        haproxy.org/server-ssl: "true"
        # cert used to verify backend services certificate
        haproxy.org/server-ca: "jenkins/fosscut-ca"
    hostName: jenkins.fosscut.com
    tls:
      - secretName: jenkins.fosscut.com-tls-secret
        hosts:
          - jenkins.fosscut.com

  # fosscut job created directly during jenkins startup
  # seed job is not necessary for such a simple setup
  JCasC:
    configScripts:
      seed: |
        jobs:
          - script: |
              job('fosscut') {
                  description('Job that runs a parametrised fosscut cli command.')
                  concurrentBuild(true)
                  parameters {
                      choiceParam('SUBCOMMAND', ['cg', 'ffd', 'greedy'], 'Subcommand that determines cutting plan generation algorithm.')
                      stringParam('REDIS_URL', 'redis://redis-replicas.redis.svc.cluster.local:6379/example-order')
                      choiceParam('LINEAR_SOLVER', ['CLP', 'GLOP', 'PDLP'], 'Linear solver to use for cutting plan generation.')
                      choiceParam('INTEGER_SOLVER', ['CBC', 'SAT', 'SCIP'], 'Integer solver to use for cutting plan generation.')
                      choiceParam('OPTIMIZATION_CRITERION', ['MIN_WASTE', 'MIN_COST'], 'Optimization criterion for cutting plan generation.')
                      stringParam('RELAX_COST', '0.0', 'Relax cost for cutting plan generation.')
                      booleanParam('RELAX_ENABLED', false, 'Whether to enable relaxation for cutting plan generation.')
                  }
                  steps {
                      shell('''
                          if [ "$SUBCOMMAND" = 'cg' ]; then
                              COMMAND_PARAMETERS="$COMMAND_PARAMETERS --linear-solver $LINEAR_SOLVER"
                          fi

                          if [ "$SUBCOMMAND" = 'cg' ] || [ "$SUBCOMMAND" = 'greedy' ]; then
                              COMMAND_PARAMETERS="$COMMAND_PARAMETERS --integer-solver $INTEGER_SOLVER"
                              COMMAND_PARAMETERS="$COMMAND_PARAMETERS --relaxation-cost $RELAX_COST"
                          fi

                          if [ "$RELAX_ENABLED" = true ]; then
                              COMMAND_PARAMETERS="$COMMAND_PARAMETERS --relaxation-enabled"
                          fi

                          fosscut --redis-connection-secrets /secrets/redis-connection-secrets.yaml $SUBCOMMAND $REDIS_URL --optimization-criterion $OPTIMIZATION_CRITERION $COMMAND_PARAMETERS
                      ''')
                  }
              }

agent:
  jenkinsUrl: https://jenkins.jenkins.svc.cluster.local:8080/
  image:
    repository: "karolstepanienko/fosscut-cli-native"
    tag: "0.0.1"
  volumes:
    - type: Secret
      mountPath: /secrets
      secretName: cli-redis-connection-secrets
      defaultMode: 0444

persistence:
  enabled: true
  existingClaim: "fosscut-jenkins-pvc"
