controller:
  installPlugins: false
  image:
    registry: "karolstepanienko"
    repository: "fosscut-jenkins-controller"
    tag: "2.492.2-jdk17"
    pullPolicy: "IfNotPresent"

  jenkinsUrlProtocol: https

  httpsKeyStore:
    enable: true
    jenkinsHttpsJksSecretName: "jenkins-keystore-secret"

  admin:
    createSecret: false
    existingSecret: "jenkins-admin-user-secret"

  ingress:
    enabled: true
    apiVersion: networking.k8s.io/v1
    ingressClassName: haproxy
    annotations:
        # use https when connecting to backend services
        haproxy.org/server-ssl: "true"
        # cert used to verify backend services certificate
        haproxy.org/server-ca: "jenkins/fosscut-ca"
    hostName: jenkins.fosscut.com
    tls:
      - secretName: jenkins.fosscut.com-tls-secret
        hosts:
          - jenkins.fosscut.com

  # fosscut job created directly during jenkins startup
  # seed job is not necessary for such a simple setup
  JCasC:
    configScripts:
      seed: |
        jobs:
          - script: |
              job('fosscut') {
                  description('Job that runs a parametrised fosscut cli command.')
                  concurrentBuild(true)
                  parameters {
                      choiceParam('subcommand', ['cg', 'ffd', 'greedy'], 'Subcommand that determines cutting plan generation algorithm.')
                      stringParam('redis_url', 'redis://redis-replicas.redis.svc.cluster.local:6379/example-order')
                  }
                  steps {
                      shell('fosscut --redis-connection-secrets /secrets/redis-connection-secrets.yaml $subcommand $redis_url')
                  }
              }

agent:
  jenkinsUrl: https://jenkins.jenkins.svc.cluster.local:8080/
  image:
    repository: "karolstepanienko/fosscut-cli-native"
    tag: "0.0.1"
  volumes:
    - type: Secret
      mountPath: /secrets
      secretName: cli-redis-connection-secrets
      defaultMode: 0444

persistence:
  enabled: true
  existingClaim: "fosscut-jenkins-pvc"
