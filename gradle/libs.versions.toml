# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
# cli
ortools = "9.11.4210"
junit = "4.13.2"
picocli = "4.7.6"
jackson = "2.18.2"
jedis = "5.2.0"
slf4j = "2.0.16"
logback = "1.5.16"

# api
spring = "3.4.0"
junitPlatform = "1.11.3"
k8sClient = "7.4.0"

# perf
junit-jupiter = "5.12.1"

[libraries]
# cli
ortools = { module = "com.google.ortools:ortools-java", version.ref = "ortools" }
junit = { module = "junit:junit", version.ref = "junit" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
picoclicodegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
jackson = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# api
springStarter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring" }
springStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring" }
springStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring" }
junitPlatform = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitPlatform" }
k8sTektonClient = { module = "io.fabric8:tekton-client", version.ref = "k8sClient" }
springDataRedis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring" }
springStarterWebflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring" }

# perf
k8sClient = { module = "io.fabric8:kubernetes-client", version.ref = "k8sClient" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
